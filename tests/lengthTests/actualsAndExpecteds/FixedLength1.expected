Printing analysis 'Promote Memory to Register' for function 'foo':
Pass::print not implemented for pass: 'Promote Memory to Register'!
Printing analysis 'Replace pointer arithmetic with GEP instructions':

entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %sum.0 = phi i32 [ 0, %entry ], [ %add9, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp sgt i32 40, %i.0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, 4
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32* %array, i64 %idxprom
  %0 = load i32* %arrayidx, align 4
  %add1 = add nsw i32 %sum.0, %0
  %arrayidx2 = getelementptr inbounds i32* %array, i64 10
  %1 = load i32* %arrayidx2, align 4
  %add3 = add nsw i32 %add1, %1
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds i32* %array, i64 %idxprom4
  %2 = load i32* %arrayidx5, align 4
  %add6 = add nsw i32 %add3, %2
  %idxprom7 = sext i32 30 to i64
  %arrayidx8 = getelementptr inbounds i32* %array, i64 %idxprom7
  %3 = load i32* %arrayidx8, align 4
  %add9 = add nsw i32 %add6, %3
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret i32 %sum.0
Printing analysis 'Integer live-range splitting' for function 'foo':
Pass::print not implemented for pass: 'Integer live-range splitting'!
Printing analysis 'Symbolic range analysis annotator (metadata)':
Pass::print not implemented for pass: 'Symbolic range analysis annotator (metadata)'!
Printing analysis 'Find arrays with a statically known constant or parameter-bounded length.':
Analyzing foo
Argument array has max index 43
