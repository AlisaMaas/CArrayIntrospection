Printing analysis 'Promote Memory to Register' for function 'bar':
Pass::print not implemented for pass: 'Promote Memory to Register'!
Printing analysis 'Promote Memory to Register' for function 'foo':
Pass::print not implemented for pass: 'Promote Memory to Register'!
Printing analysis 'Replace pointer arithmetic with GEP instructions':

entry:
  %call = call i32 @rand() #2
  %mul = mul nsw i32 4, %call
  %rem = srem i32 %mul, 30
  ret i32 %rem

entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %sum.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32* %array, i64 %idxprom
  %0 = load i32* %arrayidx, align 4
  %add = add nsw i32 %sum.0, %0
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call = call i32 @bar()
  %idxprom1 = sext i32 %call to i64
  %arrayidx2 = getelementptr inbounds i32* %array, i64 %idxprom1
  store i32 5, i32* %arrayidx2, align 4
  ret i32 %sum.0
Printing analysis 'Integer live-range splitting' for function 'bar':
Pass::print not implemented for pass: 'Integer live-range splitting'!
Printing analysis 'Integer live-range splitting' for function 'foo':
Pass::print not implemented for pass: 'Integer live-range splitting'!
Printing analysis 'Symbolic range analysis annotator (metadata)':
Pass::print not implemented for pass: 'Symbolic range analysis annotator (metadata)'!
Printing analysis 'Find arrays with a statically known constant or parameter-bounded length.':
Analyzing bar
Analyzing rand
Analyzing foo
Argument array has unknown max index.
Argument x has unknown max index.
