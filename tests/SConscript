########################################################################
#
#  common imports and setup for all tests
#

Import('env', 'penv')

plugin = env.File('../${LIBPREFIX}IIGlueReader${SHLIBSUFFIX}')


########################################################################
#
#  IIGlueReader tests
#

tests = (
    'peek',
    'variadic',
)

sources = File(['iiglue-reader-%s.c' % tail for tail in tests])

for source in sources:

    # compile C source to LLVM bitcode
    bitcode = env.BitcodeBinary(source)

    # run IIGlueReader to read saved iiglue output
    json = source.target_from_source('', '.json')
    actual = source.target_from_source('', '.actual')
    env.Command(
        actual, (plugin, json, bitcode),
        [
            [
                'opt',
                '-analyze', '-o', '$TARGET',
                '-load', '${SOURCES[0].abspath}',
                '-iiglue-reader', '-iiglue-read-file', '${SOURCES[1]}',
                '${SOURCES[2]}',
            ],
        ],
    )

    # compare IIGlueReader output dump to expected output
    env.Expect(actual)


########################################################################
#
#  unit tests using Google Test and Google Mock
#

# Fedora 20 intentionally ships the Google Mock run-time library in
# source form only, so we need to compile it here ourselves.  We
# compile it as a static library to keep things simple.
env.VariantDir('.', '/usr/src/gmock', duplicate=False)
libgmock = env.StaticLibrary('gmock', 'gmock-all.cc')
libgmock_main = env.StaticLibrary('gmock_main.cc')

menv = penv.Clone()
menv.PrependUnique(
    LIBPATH=['.'],
    LIBS=(
        plugin,
        libgmock_main,
    ),
    RPATH=[Dir('#').abspath],
)
menv.ParseConfig('gmock-config --cppflags --cxxflags --ldflags --libs')
menv.ParseConfig('gtest-config --cppflags --cxxflags --ldflags --libs')

tester, = menv.Program('iiglue-unit.cc')
stamp = tester.target_from_source('', '.passed')
env.Command(stamp, tester, [
    ['$SOURCE'],
    Touch('$TARGET'),
])


########################################################################
#
#  common post-setup work for all tests
#

# convenient "scons test" alias to run all tests
Alias('test', Glob('*.passed'))


# Local variables:
# flycheck-flake8rc: "../scons-flake8.ini"
# End:
