########################################################################
#
#  common imports and setup for all tests
#

Import('env')

plugin = env['plugin']


########################################################################
#
#  IIGlueReader tests
#

tests = (
    'peek',
    'variadic',
)

sources = File(['iiglue-reader-%s.c' % tail for tail in tests])

for source in sources:

    # compile C source to LLVM bitcode, then analyze using iiglue
    bitcode = env.BitcodeSource(source)
    json = env.IIGlueAnalyze(bitcode)

    # run IIGlueReader to read saved iiglue output
    actual = source.target_from_source('', '.actual')
    env.Command(
        actual, (plugin, json, bitcode),
        [
            [
                'opt',
                '-analyze', '-o', '$TARGET',
                '-load', '${SOURCES[0].abspath}',
                '-iiglue-reader', '-iiglue-read-file', '${SOURCES[1]}',
                '${SOURCES[2]}',
            ],
        ],
    )

    # compare IIGlueReader output dump to expected output
    env.Expect(actual)


########################################################################
#
#  common post-setup work for all tests
#

# convenient "scons test" alias to run all tests
Alias('test', Glob('*.passed'))


########################################################################
#
#  subdirectories
#

SConscript(dirs='sentinelCheckTests', exports='env')

# Local variables:
# flycheck-flake8rc: "../scons-flake8.ini"
# End:
